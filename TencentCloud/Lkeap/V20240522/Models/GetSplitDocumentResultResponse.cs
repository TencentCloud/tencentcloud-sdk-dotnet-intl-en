/*
 * Copyright (c) 2018-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

namespace TencentCloud.Lkeap.V20240522.Models
{
    using Newtonsoft.Json;
    using System.Collections.Generic;
    using TencentCloud.Common;

    public class GetSplitDocumentResultResponse : AbstractModel
    {
        
        /// <summary>
        /// Task status:
        /// -Success: execution completed.
        /// -Processing: executing.
        /// -Pause: paused.
        /// -Failed: execution failed.
        /// -WaitExecute: pending execution.
        /// </summary>
        [JsonProperty("Status")]
        public string Status{ get; set; }

        /// <summary>
        /// Temporary download URL for the splitting result. The file is a zip compressed package, and the URL is valid for 30 minutes. The compressed package contains the following folders: \*.md, \*.jsonl, \*mllm.json, images.
        /// >**jsonl** structure description:.
        /// - page_content: Used to generate an embedding library for retrieval purposes. The images in this field will be replaced with placeholders.
        /// - org_data: The minimum semantic integrity block corresponding to page_content, used for Q&A model processing.
        /// - big_data: The maximum semantic integrity block corresponding to page_content, also used for Q&A model processing.
        /// </summary>
        [JsonProperty("DocumentRecognizeResultUrl")]
        public string DocumentRecognizeResultUrl{ get; set; }

        /// <summary>
        /// Page number where document splitting fails.
        /// </summary>
        [JsonProperty("FailedPages")]
        [System.Obsolete]
        public SplitDocumentFailedPage[] FailedPages{ get; set; }

        /// <summary>
        /// Amount of the document split task.
        /// </summary>
        [JsonProperty("Usage")]
        public DocumentUsage Usage{ get; set; }

        /// <summary>
        /// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
        /// </summary>
        [JsonProperty("RequestId")]
        public string RequestId{ get; set; }


        /// <summary>
        /// For internal usage only. DO NOT USE IT.
        /// </summary>
        public override void ToMap(Dictionary<string, string> map, string prefix)
        {
            this.SetParamSimple(map, prefix + "Status", this.Status);
            this.SetParamSimple(map, prefix + "DocumentRecognizeResultUrl", this.DocumentRecognizeResultUrl);
            this.SetParamArrayObj(map, prefix + "FailedPages.", this.FailedPages);
            this.SetParamObj(map, prefix + "Usage.", this.Usage);
            this.SetParamSimple(map, prefix + "RequestId", this.RequestId);
        }
    }
}

