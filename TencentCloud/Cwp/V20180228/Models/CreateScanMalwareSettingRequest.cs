/*
 * Copyright (c) 2018-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

namespace TencentCloud.Cwp.V20180228.Models
{
    using Newtonsoft.Json;
    using System.Collections.Generic;
    using TencentCloud.Common;

    public class CreateScanMalwareSettingRequest : AbstractModel
    {
        
        /// <summary>
        /// Scan mode: 0 - full disk scan; 1 - rapid scan
        /// </summary>
        [JsonProperty("ScanPattern")]
        public ulong? ScanPattern{ get; set; }

        /// <summary>
        /// Server classification: 1: Professional Edition servers; 2: self-selected servers
        /// </summary>
        [JsonProperty("HostType")]
        public long? HostType{ get; set; }

        /// <summary>
        /// Effective for selected servers; a string array of host QUUIDs
        /// </summary>
        [JsonProperty("QuuidList")]
        public string[] QuuidList{ get; set; }

        /// <summary>
        /// Timeout unit: seconds, which is 3,600 seconds by default.
        /// </summary>
        [JsonProperty("TimeoutPeriod")]
        public ulong? TimeoutPeriod{ get; set; }

        /// <summary>
        /// 1 - standard mode (only critical and high-risk are reported.); 2 - enhanced mode (critical, high-risk, and medium-risk are reported.); 3 - strict mode (critical, high-risk, medium-risk, low-risk, and prompt are reported.)
        /// </summary>
        [JsonProperty("EngineType")]
        public ulong? EngineType{ get; set; }

        /// <summary>
        /// Whether to enable malicious process killing [0: Not Enabled; 1: Enabled]
        /// </summary>
        [JsonProperty("EnableMemShellScan")]
        public long? EnableMemShellScan{ get; set; }


        /// <summary>
        /// For internal usage only. DO NOT USE IT.
        /// </summary>
        public override void ToMap(Dictionary<string, string> map, string prefix)
        {
            this.SetParamSimple(map, prefix + "ScanPattern", this.ScanPattern);
            this.SetParamSimple(map, prefix + "HostType", this.HostType);
            this.SetParamArraySimple(map, prefix + "QuuidList.", this.QuuidList);
            this.SetParamSimple(map, prefix + "TimeoutPeriod", this.TimeoutPeriod);
            this.SetParamSimple(map, prefix + "EngineType", this.EngineType);
            this.SetParamSimple(map, prefix + "EnableMemShellScan", this.EnableMemShellScan);
        }
    }
}

