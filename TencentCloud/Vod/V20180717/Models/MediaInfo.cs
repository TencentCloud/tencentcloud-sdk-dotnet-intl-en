/*
 * Copyright (c) 2018-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

namespace TencentCloud.Vod.V20180717.Models
{
    using Newtonsoft.Json;
    using System.Collections.Generic;
    using TencentCloud.Common;

    public class MediaInfo : AbstractModel
    {
        
        /// <summary>
        /// Basic information, such as video name, category, playback address, and cover image.
        /// Note: this field may return null, indicating that no valid values can be obtained.
        /// </summary>
        [JsonProperty("BasicInfo")]
        public MediaBasicInfo BasicInfo{ get; set; }

        /// <summary>
        /// Metadata, such as size, duration, video stream information, and audio stream information.
        /// Note: this field may return null, indicating that no valid values can be obtained.
        /// </summary>
        [JsonProperty("MetaData")]
        public MediaMetaData MetaData{ get; set; }

        /// <summary>
        /// Result information of transcoding, such as address, specification, bitrate, and resolution of the videos in various bitrates generated by transcoding a video.
        /// Note: this field may return null, indicating that no valid values can be obtained.
        /// </summary>
        [JsonProperty("TranscodeInfo")]
        public MediaTranscodeInfo TranscodeInfo{ get; set; }

        /// <summary>
        /// Result information of animated image generating, i.e., relevant information of an animated image (such as .gif) generated from a video.
        /// Note: this field may return null, indicating that no valid values can be obtained.
        /// </summary>
        [JsonProperty("AnimatedGraphicsInfo")]
        public MediaAnimatedGraphicsInfo AnimatedGraphicsInfo{ get; set; }

        /// <summary>
        /// Sampled screenshot information, i.e., relevant information of a sampled screenshot generated from a video.
        /// Note: this field may return null, indicating that no valid values can be obtained.
        /// </summary>
        [JsonProperty("SampleSnapshotInfo")]
        public MediaSampleSnapshotInfo SampleSnapshotInfo{ get; set; }

        /// <summary>
        /// Image sprite information, i.e., relevant information of image sprite generated from video.
        /// Note: this field may return null, indicating that no valid values can be obtained.
        /// </summary>
        [JsonProperty("ImageSpriteInfo")]
        public MediaImageSpriteInfo ImageSpriteInfo{ get; set; }

        /// <summary>
        /// Time point screenshot information, i.e., information of each time point screenshot generated from a video.
        /// Note: this field may return null, indicating that no valid values can be obtained.
        /// </summary>
        [JsonProperty("SnapshotByTimeOffsetInfo")]
        public MediaSnapshotByTimeOffsetInfo SnapshotByTimeOffsetInfo{ get; set; }

        /// <summary>
        /// Timestamp information, i.e., information of each timestamp set for a video.
        /// Note: this field may return null, indicating that no valid values can be obtained.
        /// </summary>
        [JsonProperty("KeyFrameDescInfo")]
        public MediaKeyFrameDescInfo KeyFrameDescInfo{ get; set; }

        /// <summary>
        /// Adaptive bitrate streaming information, such as specification, encryption type, and container format.
        /// Note: this field may return null, indicating that no valid values can be obtained.
        /// </summary>
        [JsonProperty("AdaptiveDynamicStreamingInfo")]
        public MediaAdaptiveDynamicStreamingInfo AdaptiveDynamicStreamingInfo{ get; set; }

        /// <summary>
        /// WeChat Mini Program audit information.
        /// Note: this field may return null, indicating that no valid values can be obtained.
        /// </summary>
        [JsonProperty("MiniProgramReviewInfo")]
        public MediaMiniProgramReviewInfo MiniProgramReviewInfo{ get; set; }

        /// <summary>
        /// Subtitle information
        /// Note: this field may return `null`, indicating that no valid value is obtained.
        /// </summary>
        [JsonProperty("SubtitleInfo")]
        public MediaSubtitleInfo SubtitleInfo{ get; set; }

        /// <summary>
        /// Unique ID of media file.
        /// </summary>
        [JsonProperty("FileId")]
        public string FileId{ get; set; }

        /// <summary>
        /// Moderation details.
        /// Note: This field may return null, indicating that no valid values can be obtained.
        /// </summary>
        [JsonProperty("ReviewInfo")]
        public FileReviewInfo ReviewInfo{ get; set; }


        /// <summary>
        /// For internal usage only. DO NOT USE IT.
        /// </summary>
        public override void ToMap(Dictionary<string, string> map, string prefix)
        {
            this.SetParamObj(map, prefix + "BasicInfo.", this.BasicInfo);
            this.SetParamObj(map, prefix + "MetaData.", this.MetaData);
            this.SetParamObj(map, prefix + "TranscodeInfo.", this.TranscodeInfo);
            this.SetParamObj(map, prefix + "AnimatedGraphicsInfo.", this.AnimatedGraphicsInfo);
            this.SetParamObj(map, prefix + "SampleSnapshotInfo.", this.SampleSnapshotInfo);
            this.SetParamObj(map, prefix + "ImageSpriteInfo.", this.ImageSpriteInfo);
            this.SetParamObj(map, prefix + "SnapshotByTimeOffsetInfo.", this.SnapshotByTimeOffsetInfo);
            this.SetParamObj(map, prefix + "KeyFrameDescInfo.", this.KeyFrameDescInfo);
            this.SetParamObj(map, prefix + "AdaptiveDynamicStreamingInfo.", this.AdaptiveDynamicStreamingInfo);
            this.SetParamObj(map, prefix + "MiniProgramReviewInfo.", this.MiniProgramReviewInfo);
            this.SetParamObj(map, prefix + "SubtitleInfo.", this.SubtitleInfo);
            this.SetParamSimple(map, prefix + "FileId", this.FileId);
            this.SetParamObj(map, prefix + "ReviewInfo.", this.ReviewInfo);
        }
    }
}

